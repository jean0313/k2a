package {{ .GCtx.Group }}.{{ .GCtx.PackageName }}.service;

import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import {{ .GCtx.Group }}.{{ .GCtx.PackageName }}.model.{{ .SchemaName }};
import com.ai.tx.core.annotation.ConsumerHandler;
import com.ai.tx.core.model.ConsumerEventProcessor;

import lombok.extern.slf4j.Slf4j;

/**
 * WARNING: This is an autogenerated class. Do not modify this class.
 *
 */
 @Service
 @Slf4j
 public class ConsumerService {

    @Autowired
    @Qualifier("{{ .ChannelName | capitalize }}ConsumerProcessor")
    ConsumerEventProcessor<String, {{ .SchemaName }}> {{ .ChannelName }}Processor;

    @ConsumerHandler(validator="{{ .ChannelName | capitalize }}ConsumerValidator")
    @KafkaListener(topics = "{{ .ChannelName | capitalize }}", groupId = "", containerFactory = "{{ .ChannelName | capitalize }}ConsumerFactoryConfig")
    public void {{ .SchemaName | uncapitalize }}(ConsumerRecord<String, {{ .SchemaName }}> message) throws Exception {
        log.info(" Timestamp: " + message.timestamp() + ", Partition: " + message.partition());
        log.info(String.format("Received message on Kafka Topics: %s", message.value()));
        {{ .ChannelName }}Processor.process(message);
    }
 }